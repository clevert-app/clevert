name: asset_ect
on:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  linux-x64:
    runs-on: ubuntu-22.04
    steps:
      - name: Build
        run: |
          sudo sh -c 'printf "deb [trusted=yes] http://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main\ndeb-src [trusted=yes] http://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main\n" >> /etc/apt/sources.list'
          sudo apt update
          sudo apt install -y clang-18/llvm-toolchain-jammy-18
          export PATH="/usr/lib/llvm-18/bin:$PATH"
          curl -L https://github.com/fhanau/Efficient-Compression-Tool/archive/9aabc23d73899ae55c1de292592fed6eb6217f66.tar.gz | tar -zx --strip-components 1 # 0.9.5
          curl -L https://github.com/pnggroup/libpng/archive/f135775ad4e5d4408d2e12ffcc71bb36e6b48551.tar.gz | tar -zx --strip-components 1 -C src/libpng
          curl -L https://github.com/mozilla/mozjpeg/archive/6c9f0897afa1c2738d7222a0a9ab49e8b536a267.tar.gz | tar -zx --strip-components 1 -C src/mozjpeg # 4.1.5
          mv src/* ./
          sed -i.bak 's|set(PNG_BUILD_ZLIB |#|' optipng/CMakeLists.txt
          sed -i.bak 's|message(FATAL_ERROR |#|' mozjpeg/CMakeLists.txt
          sed -i.bak 's|option(PNG_SUPPORTED |option(PNG_SUPPORTED "" FALSE) #|' mozjpeg/CMakeLists.txt
          sed -i.bak "s|find_package(ZLIB REQUIRED)|#|" libpng/CMakeLists.txt
          export CC="clang"
          export CXX="clang++"
          curl -o pgo-0.profdata.zip -L https://github.com/clevert-app/clevert/releases/download/asset_pgo_files_store/asset_ect_linux-x64_1716610476.zip # github actions' machine is not enough stable to generate good profile
          unzip pgo-0.profdata.zip
          if [ ! -e pgo-0.profdata ]; then
          rm -rf build pgo-*
          s="-flto -fprofile-instr-generate"
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=" $s " -DCMAKE_C_FLAGS=" $s " -DECT_MULTITHREADING=OFF # ect use it's custom zlib, so link to system zlib is impossible
          cmake --build build
          if [ -e _sample_bak ]; then
          rm -rf _sample
          cp -R _sample_bak _sample
          else
          mkdir _sample_bak
          curl \
            -o _sample_bak/2.png -L https://user-images.githubusercontent.com/634063/202742985-bb3b3b94-8aca-404a-8d8a-fd6a6f030672.png \
            -o _sample_bak/3.png -L https://user-images.githubusercontent.com/35271042/118224532-3842c400-b438-11eb-923d-a5f66fa6785a.png \
            -o _sample_bak/4.png -L https://raw.githubusercontent.com/microsoft/.github/105835e2f9324920c7b08d93364c70b4a6f4d4eb/images/open-at-microsoft.png \
            -o _sample_bak/5.png -L https://raw.githubusercontent.com/utmapp/UTM/1e0e6b20621e9cfb63b71fb983995bb59bf34ea1/screenmac.png \
            -o _sample_bak/7.tar.gz -L https://github.com/BurntSushi/ripgrep/releases/download/14.1.0/ripgrep-14.1.0-x86_64-unknown-linux-musl.tar.gz \
            -o _sample_bak/8.tar.gz -L https://github.com/utmapp/UTM/archive/refs/tags/v4.5.3.tar.gz \
            --parallel
          gzip -d _sample_bak/7.tar.gz
          gzip -d _sample_bak/8.tar.gz
          fi
          rm -rf _sample
          cp -R _sample_bak _sample
          LLVM_PROFILE_FILE="pgo-01.profraw" ./build/ect -3 -gzip _sample/7.tar
          LLVM_PROFILE_FILE="pgo-02.profraw" ./build/ect -3 -gzip _sample/8.tar
          LLVM_PROFILE_FILE="pgo-03.profraw" ./build/ect -3 -zip _sample/9.zip _sample/7.tar _sample/8.tar
          LLVM_PROFILE_FILE="pgo-04.profraw" ./build/ect -3 --allfilters _sample/3.png _sample/4.png
          LLVM_PROFILE_FILE="pgo-05.profraw" ./build/ect -5 _sample/2.png _sample/5.png
          rm -rf _sample
          cp -R _sample_bak _sample
          LLVM_PROFILE_FILE="pgo-06.profraw" ./build/ect -4 -gzip _sample/8.tar
          LLVM_PROFILE_FILE="pgo-04.profraw" ./build/ect -3 --allfilters _sample/3.png _sample/4.png
          LLVM_PROFILE_FILE="pgo-05.profraw" ./build/ect -7 _sample/2.png _sample/5.png
          rm -rf _sample
          cp -R _sample_bak _sample
          LLVM_PROFILE_FILE="pgo-11.profraw" ./build/ect -4 -gzip _sample/7.tar
          LLVM_PROFILE_FILE="pgo-12.profraw" ./build/ect -4 -gzip _sample/8.tar
          LLVM_PROFILE_FILE="pgo-13.profraw" ./build/ect -4 -zip _sample/9.zip _sample/7.tar _sample/8.tar
          LLVM_PROFILE_FILE="pgo-04.profraw" ./build/ect -3 --allfilters _sample/3.png _sample/4.png
          LLVM_PROFILE_FILE="pgo-05.profraw" ./build/ect -5 _sample/2.png _sample/5.png
          rm -rf _sample
          cp -R _sample_bak _sample
          LLVM_PROFILE_FILE="pgo-16.profraw" ./build/ect -4 -gzip _sample/8.tar
          LLVM_PROFILE_FILE="pgo-04.profraw" ./build/ect -3 --allfilters _sample/3.png _sample/4.png
          LLVM_PROFILE_FILE="pgo-05.profraw" ./build/ect -7 _sample/2.png _sample/5.png
          llvm-profdata merge -output=pgo-0.profdata pgo-*.profraw
          rm -rf build
          fi
          s="-flto -fprofile-instr-use=$(pwd)/pgo-0.profdata"
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=" $s " -DCMAKE_C_FLAGS=" $s " -DECT_MULTITHREADING=OFF 
          cmake --build build
          mv build/ect .
          strip ect
          zip -9 linux-x64.zip ect
      - name: Verify
        run: |
          uname -a
          ldd --version
          ldd ./ect || true
          ./ect
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          body: "`github.workflow_sha = ${{ github.workflow_sha }}`"
          tag_name: "${{ 'asset_ect_0.9.5_' }}${{ github.run_id }}"
          files: linux-x64.zip
  mac-arm64:
    runs-on: macos-14
    steps:
      - name: Build
        run: |
          curl -L https://github.com/fhanau/Efficient-Compression-Tool/archive/9aabc23d73899ae55c1de292592fed6eb6217f66.tar.gz | tar -zx --strip-components 1 # 0.9.5
          curl -L https://github.com/pnggroup/libpng/archive/f1848a3b560ddcad065242268433af475948461e.tar.gz | tar -zx --strip-components 1 -C src/libpng # 1.6.44
          curl -L https://github.com/mozilla/mozjpeg/archive/6c9f0897afa1c2738d7222a0a9ab49e8b536a267.tar.gz | tar -zx --strip-components 1 -C src/mozjpeg # 4.1.5
          mv src/* ./
          sed -i.bak 's|set(PNG_BUILD_ZLIB |#|' optipng/CMakeLists.txt
          sed -i.bak 's|message(FATAL_ERROR |#|' mozjpeg/CMakeLists.txt
          sed -i.bak 's|option(PNG_SUPPORTED |option(PNG_SUPPORTED "" FALSE) #|' mozjpeg/CMakeLists.txt
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=" -flto " -DCMAKE_C_FLAGS=" -flto " -DECT_MULTITHREADING=OFF # ect use it's custom zlib, so link to system zlib is impossible
          cmake --build build
          mv build/ect .
          strip ect
          zip -9 mac-arm64.zip ect
      - name: Verify
        run: |
          uname -a
          otool -L ./ect || true
          ./ect
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          body: "`github.workflow_sha = ${{ github.workflow_sha }}`"
          tag_name: "${{ 'asset_ect_0.9.5_' }}${{ github.run_id }}"
          files: mac-arm64.zip
  win-x64:
    runs-on: windows-2022
    steps:
      - name: Build
        shell: cmd
        run: |
          curl -L https://github.com/fhanau/Efficient-Compression-Tool/archive/9aabc23d73899ae55c1de292592fed6eb6217f66.tar.gz | tar -f - -zx --strip-components 1
          :: the old one, match ect's submodule
          curl -L https://github.com/pnggroup/libpng/archive/f135775ad4e5d4408d2e12ffcc71bb36e6b48551.tar.gz | tar -f - -zx --strip-components 1 -C src/libpng
          curl -L https://github.com/mozilla/mozjpeg/archive/6c9f0897afa1c2738d7222a0a9ab49e8b536a267.tar.gz | tar -f - -zx --strip-components 1 -C src/mozjpeg
          C:\msys64\usr\bin\mv src/* ./
          C:\msys64\usr\bin\sed -i.bak "s|set(PNG_BUILD_ZLIB |#|" optipng/CMakeLists.txt
          C:\msys64\usr\bin\sed -i.bak "s|message(FATAL_ERROR |#|" mozjpeg/CMakeLists.txt
          C:\msys64\usr\bin\sed -i.bak "s|option(PNG_SUPPORTED |option(PNG_SUPPORTED '' FALSE) #|" mozjpeg/CMakeLists.txt
          C:\msys64\usr\bin\sed -i.bak "s|option(ENABLE_SHARED |option(ENABLE_SHARED '' FALSE) #|" mozjpeg/CMakeLists.txt
          C:\msys64\usr\bin\sed -i.bak "s|find_package(ZLIB REQUIRED)|#|" libpng/CMakeLists.txt
          C:\msys64\usr\bin\sed -i.bak "s|__restrict__||g" zopfli/match.h
          call "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"
          cmake -B build -DECT_MULTITHREADING=OFF -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded
          cmake --build build --config Release
          copy build\Release\ect.exe ect.exe
          7z a win-x64.zip ect.exe -mx=9
      - name: Verify
        shell: C:\msys64\msys2_shell.cmd -mingw64 -defterm -here -no-start -e {0}
        run: |
          uname -a
          ldd ./ect.exe || true
          ./ect.exe
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          body: "`github.workflow_sha = ${{ github.workflow_sha }}`"
          tag_name: "${{ 'asset_ect_0.9.5_' }}${{ github.run_id }}"
          files: win-x64.zip
# ect is much faster than leanify / origin zopfli
# https://github.com/google/zopfli/pull/119
# https://github.com/fhanau/Efficient-Compression-Tool
# curl -L https://github.com/JayXon/Leanify/archive/9daa4303cdc03f6b90b72c369e6377c6beb75c39.tar.gz | tar -zx --strip-components 1

# [kkocdko@klf misc]$ time ./ect -7 a.ect-7.png
# Processed 1 file
# Saved 145.62KB out of 405.88KB (35.8765%)
# real 0m6.239s
# user 0m6.187s
# sys 0m0.028s
# [kkocdko@klf misc]$ time ./ect -7 a.ect-7.png
# Processed 1 file
# Saved 0B out of 260.27KB (0.0000%)
# real 0m6.183s
# user 0m6.137s
# sys 0m0.031s

# [kkocdko@klf misc]$ time ./leanify_avx2_core a.leanify.png
# Processing: a.leanify.png
# 405.88 KB -> 260.12 KB Leanified: 145.76 KB (35.91%)
# 405.88 KB -> 260.12 KB Leanified: 145.76 KB (35.91%)
# real 0m44.216s
# user 0m44.005s
# sys 0m0.056s
# [kkocdko@klf misc]$ time ./leanify_avx2_core a.leanify.png
# Processing: a.leanify.png
# 260.12 KB -> 260.12 KB Leanified: 0 B (0.00%)
# real 0m43.796s
# user 0m43.641s
# sys 0m0.037s
