name: make.webp
on:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  linux-x64:
    runs-on: ubuntu-22.04
    steps:
      - name: Build
        shell: sudo bash -e {0}
        run: |
          curl -L https://github.com/webmproject/libwebp/archive/refs/tags/v1.4.0.tar.gz | tar -zx --strip-components 1
          cat <<EOF >examples/multicall.c
          #include <stddef.h>
          #include <string.h>
          #include "jxlinfo.c"
          #include "cjxl_main.cc"
          #include "djxl_main.cc"
          #include "cjpegli.cc"
          #include "djpegli.cc"
          #if defined(WIN32) || defined(_WIN32)
          #define PATH_SEPARATOR '\\\\'
          #else
          #define PATH_SEPARATOR '/'
          #endif
          int main(int argc, const char *argv[]) {
            if (argc <= 0) {
              return 1;
            }
            const char *argv0 = strrchr(argv[0], PATH_SEPARATOR);
            if (argv0 == NULL) {
              argv0 = argv[0];
            } else {
              argv0++;
            }
          before:
            if (argc <= 0) {
              return 1;
            } else if (strcmp(argv0, "webpinfo") == 0) {
              return cmd_webpinfo_main(argc, argv);
            } else if (strcmp(argv0, "cwebp") == 0) {
              return cmd_cwebp_main(argc, argv);
            } else if (strcmp(argv0, "dwebp") == 0) {
              return cmd_dwebp_main(argc, argv);
            } else if (strcmp(argv0, "gif2webp") == 0) {
              return cmd_gif2webp_main(argc, argv);
            } else if (strcmp(argv0, "img2webp") == 0) {
              return cmd_img2webp_main(argc, argv);
            } else {
              argv++;
              argc--;
              if (argc <= 0) {
                return 1;
              }
              argv0 = strrchr(argv[0], PATH_SEPARATOR);
              if (argv0 == NULL) {
                argv0 = argv[0];
              } else {
                argv0++;
              }
              goto before;
            }
            return 0;
          }
          EOF
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF -DWEBP_BUILD_WEBPINFO=ON -DWEBP_BUILD_CWEBP=ON -DWEBP_BUILD_DWEBP=ON -DWEBP_BUILD_GIF2WEBP=ON -DWEBP_BUILD_IMG2WEBP=ON
          cmake --build build
          apt update

          apt install -y g++ cmake ninja-build pkg-config libbrotli-dev libgif-dev libjpeg-dev libopenexr-dev libpng-dev
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF  -DCMAKE_FIND_LIBRARY_SUFFIXES=".a" -DJPEGXL_STATIC=ON  -DBUILD_TESTING=OFF -DJPEGXL_ENABLE_JPEGLI_LIBJPEG=OFF -DJPEGXL_ENABLE_VIEWERS=OFF -DJPEGXL_ENABLE_PLUGINS=OFF -DJPEGXL_ENABLE_OPENEXR=OFF -DJPEGXL_ENABLE_DEVTOOLS=ON
          mv build/tools/multicall ./jpegxl
          strip ./jpegxl
          zip -9 linux-x64.zip jpegxl
      - name: Verify
        run: |
          ldd ./jpegxl || true
          ./jpegxl cjxl -V
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: "`github.workflow_sha = ${{ github.workflow_sha }}`"
          prerelease: true
          tag_name: "${{ 'make.jpegxl_b2fb216_' }}${{ github.run_id }}"
          files: linux-x64.zip
# https://github.com/webmproject/libwebp/blob/v1.4.0/doc/building.md
# https://github.com/webmproject/libwebp/blob/v1.4.0/CMakeLists.txt
