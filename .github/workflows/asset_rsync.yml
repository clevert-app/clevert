name: asset_rsync
on:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  linux-x64:
    runs-on: ubuntu-22.04
    steps:
      - name: Build
        run: |
          sudo apt update
          sudo apt install -y musl-tools make automake
          curl \
            -O -L http://ftp.debian.org/debian/pool/main/x/xxhash/libxxhash-dev_0.8.2-2+b1_amd64.deb \
            -O -L http://ftp.debian.org/debian/pool/main/libz/libzstd/libzstd-dev_1.5.5+dfsg2-2_amd64.deb \
            --parallel
          for v in *.deb; do dpkg -x $v _debs; done
          curl -L https://github.com/RsyncProject/rsync/archive/refs/tags/v3.3.0.tar.gz | tar -zx --strip-components 1
          export CC="musl-gcc -s -static -O2 -I _debs/usr/include -L _debs/usr/lib/x86_64-linux-gnu"
          ./configure CC="$CC" --disable-lz4 --disable-openssl --disable-md2man --disable-debug
          make CC="$CC" -j$(nproc)
          zip -9 linux-x64.zip rsync
      - name: Verify
        run: |
          uname -a
          ldd ./rsync || true
          ./rsync -V
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          body: "`github.workflow_sha = ${{ github.workflow_sha }}`"
          tag_name: "${{ 'asset_rsync_3.3.0_' }}${{ github.run_id }}"
          files: linux-x64.zip
  linux-arm64:
    runs-on: warp-ubuntu-2204-arm64-2x
    steps:
      - name: Build
        run: |
          sudo apt update
          sudo apt install -y musl-tools make automake
          curl \
            -O -L http://ftp.debian.org/debian/pool/main/x/xxhash/libxxhash-dev_0.8.2-2+b1_arm64.deb \
            -O -L http://ftp.debian.org/debian/pool/main/libz/libzstd/libzstd-dev_1.5.5+dfsg2-2_arm64.deb \
            --parallel
          for v in *.deb; do dpkg -x $v _debs; done
          curl -L https://github.com/RsyncProject/rsync/archive/refs/tags/v3.3.0.tar.gz | tar -zx --strip-components 1
          export CC="musl-gcc -s -static -O2 -I _debs/usr/include -L _debs/usr/lib/aarch64-linux-gnu"
          ./configure CC="$CC" --disable-lz4 --disable-openssl --disable-md2man --disable-debug
          make CC="$CC" -j$(nproc)
          zip -9 linux-arm64.zip rsync
      - name: Verify
        run: |
          uname -a
          ldd ./rsync || true
          ./rsync -V
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          tag_name: "${{ 'asset_rsync_3.3.0_' }}${{ github.run_id }}"
          body: "`github.workflow_sha = ${{ github.workflow_sha }}`"
          files: linux-arm64.zip
  mac-arm64:
    runs-on: macos-14
    steps:
      - name: Build
        run: |
          ( unset CI ; brew install zstd xxhash automake autoconf )
          rm -rf /opt/homebrew/opt/zstd/lib/*.dylib /opt/homebrew/opt/xxhash/lib/*.dylib
          curl -L https://github.com/RsyncProject/rsync/archive/refs/tags/v3.3.0.tar.gz | tar -zx --strip-components 1
          export CFLAGS="-I$(brew --prefix zstd)/include -L$(brew --prefix zstd)/lib -I$(brew --prefix xxhash)/include -L$(brew --prefix xxhash)/lib"
          ./configure --disable-lz4 --disable-openssl --disable-md2man --disable-debug
          make -j$(nproc)
          zip -9 mac-arm64.zip rsync
      - name: Verify
        run: |
          uname -a
          otool -L ./rsync || true
          ./rsync -V
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          tag_name: "${{ 'asset_rsync_3.3.0_' }}${{ github.run_id }}"
          body: "`github.workflow_sha = ${{ github.workflow_sha }}`"
          files: mac-arm64.zip
  win-x64:
    runs-on: windows-2022
    steps:
      - name: Build
        shell: C:\msys64\msys2_shell.cmd -defterm -here -no-start -e {0}
        run: |
          pacman -S --noconfirm libzstd-devel libxxhash-devel gcc zip autotools automake make
          curl -L https://github.com/Cyan4973/xxHash/archive/refs/tags/v0.8.2.tar.gz | tar -zx
          make -C xxHash-0.8.2 CC="gcc -O3 -static" -j$(nproc)
          mv xxHash-0.8.2/libxxhash.a /usr/lib/
          curl -L https://github.com/RsyncProject/rsync/archive/refs/tags/v3.3.0.tar.gz | tar -zx --strip-components 1 --exclude "*.test"
          ./configure --disable-lz4 --disable-openssl --disable-md2man --disable-debug
          make CC="gcc -static -O2" -j$(nproc) || true # no -flto
          strip rsync.exe
          cp /usr/bin/msys-2.0.dll ./
          zip -9 win-x64.zip rsync.exe msys-2.0.dll
      - name: Verify
        run: |
          C:\msys64\usr\bin\uname -a
          C:\msys64\usr\bin\ldd rsync.exe
          ./rsync.exe -V
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          tag_name: "${{ 'asset_rsync_3.3.0_' }}${{ github.run_id }}"
          body: "`github.workflow_sha = ${{ github.workflow_sha }}`"
          files: win-x64.zip
# Tips:
# - Must enable xxhash, it improved the performance a lot.
# - The linux-x64 and linux-arm64 totaly static, unlike other asstes, because I want to use them for other purpose like android phone and empty docker container.
# - The win-x64 depends on msys2 dll, it's unavoidable currently. Try to fix?
